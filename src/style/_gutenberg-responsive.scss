@media screen and (min-width: #{ $max-width + 5 + 'em'}){
	body, html {
		margin: 0;
		width: 100%;
		max-width: none;
	}

	// Reset line-height and margins for desktop, set max-width
	* {
		max-width: #{$max-width * $base-desktop + 'px'};
		max-width: #{$max-width + 'rem'};
		margin-left: auto!important;
		margin-right: auto!important;
		line-height: #{$leading-desktop + 'px'};
		line-height: #{$leading-rem-desktop + 'rem'};
		margin-bottom: #{$leading-rem-desktop + 'rem'};
	}

	// Reset base font size for desktop
	html {
		font-size: #{$base-desktop + 'px'};
		font-size: #{$base-font-size-desktop / 100 + 'rem'};
	}

	// Reset grid for desktop line-height
	.grid {
		background-size: 100% #{$leading-desktop + 'px'};
    	background-size: 100% #{$leading-rem-desktop + 'rem'};
	}

	.grid-double {
		background-image: linear-gradient(to bottom, hsla(200, 100%, 50%, .3) 1px, transparent 1px, transparent #{ 0.5 * $leading-desktop + 'px'},  hsla(200, 100%, 50%, .2) #{ 0.5 * $leading-desktop + 'px'}, transparent #{ 0.5 * $leading-desktop + 1 + 'px'}, transparent #{$leading-desktop + 'px'});
	}

	// Set max-wdith for article
	article {
		max-width: #{1.5 * $max-width * $base-desktop + 'px'};
		max-width: #{1.5 * $max-width + 'rem'};
	}

	.btnToggleGrid {
		top: #{$leading-desktop + 'px'};
		right: #{$leading-desktop + 'px'};
	}

	// Heading sizes, line-heights and margins
	@each $heading, $properties in $headings {
	    #{$heading} {
	    	font-size: #{nth($properties, 1) * $base-desktop + 'px'};
	    	font-size: #{nth($properties, 1) + 'rem'};
	    	line-height: #{nth($properties, 2)*$leading-desktop + 'px'};
	    	line-height: #{nth($properties, 2)*$leading-rem-desktop + 'rem'};
	        margin-top: #{nth($properties, 3) * $leading-desktop + 'px'};
	        margin-top: #{nth($properties, 3) * $leading-rem-desktop + 'rem'};
	        margin-bottom: #{nth($properties, 4) * $leading-desktop + 'px'};
	        margin-bottom: #{nth($properties, 4) * $leading-rem-desktop + 'rem'};
	    }
	}

	// Set margins between headings
	h1 + h2 {
		margin-top: #{$leading-desktop + 'px'};
	    margin-top: #{$leading-rem-desktop + 'rem'};
	}

	h2 + h3, h3 + h4, h4 + h5 {
		margin-top: #{0.5 * $leading-desktop + 'px'};
	    margin-top: #{0.5 * $leading-rem-desktop + 'rem'};
	}

	h5 + h6 {
		margin-top: -#{0.5 * $leading-desktop + 'px'};
	    margin-top: -#{0.5 * $leading-rem-desktop + 'rem'};
	}

	// Floated images width & padding
	figure.floatLeft,
	figure.floatRight {
		max-width: #{0.5 * $max-width * $base-desktop + 'px'};
		max-width: #{0.5 * $max-width + 'rem'};
		padding: 0 #{$leading-desktop + 'px'};
		padding: 0 #{$leading-rem-desktop + 'rem'};
	}

	// Set figcaption line-height for desktop
	figcaption {
		line-height: #{$leading-desktop + 'px'};
		line-height: #{$leading-rem-desktop + 'rem'};
		margin-bottom: 0;
	}

	// Float defaults
	.floatLeft {
		float: left;
	}

	.floatCenter {
		margin-left: auto;
		margin-right: auto;
	}

	.floatRight {
		float: right;
	}

	// Blockquote indent
	blockquote {
		padding-left: 2rem;
	}

	// Set small line-height
	small {
		line-height: #{0.5 * $leading-desktop + 'px'};
		line-height: #{0.5 * $leading-rem-desktop + 'rem'};
	}

	hr {
		margin: #{3 * $leading-desktop + 'px'} auto;
    	margin: #{3 * $leading-rem-desktop + 'rem'} auto;
    	height: #{$leading-desktop + 'px'};
    	height: #{$leading-rem-desktop + 'rem'};
    	background-size: 100% #{$leading-desktop + 'px'};
    	background-size: 100% #{$leading-rem-desktop + 'rem'};
    	background-image: linear-gradient(to bottom, transparent 1px, transparent #{ 0.5 * $leading-desktop + 'px'},  $color-font-body #{ 0.5 * $leading-desktop + 'px'}, transparent #{ 0.5 * $leading-desktop + 1 + 'px'}, transparent #{$leading-desktop + 'px'});
	}

	code {
		padding: #{$leading-desktop + 'px'};
		padding: #{$leading-rem-desktop + 'rem'};
	}
}